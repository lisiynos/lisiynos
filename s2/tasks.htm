<html>

<head>
    <meta http-equiv=Content-Type content="text/html; charset=utf-8">
    <title>Задачи</title>
    <link rel="stylesheet" type="text/css" href="../style/style.css">
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});



    </script>
    <script type="text/javascript"
            src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
    </script>
</head>
<body>

<div id="content">
<h1> Задачи</h1>

<h3>Задача 1</h3>

<p>Возвести заданное вещественное число $X$ в заданную натуральную
    степень $N$. В этой задаче
    совсем легко найти формулу: <em>X&nbsp;<sup>N</sup> =
        X&nbsp;&#183;&nbsp;X&nbsp;<sup>N - 1</sup></em>, но такой алгоритм
    потребует N-1 повторение процесса. Гораздо более эффективным будет
    следующий алгоритм:</p>

<table align="left" cellpadding="0" cellspacing="0" style="margin:5px 0 5px 
0;">
    <tr>
        <td rowspan="5"><em>X&nbsp;<sup>N</sup></em>&nbsp;=</td>
        <td rowspan="5"><img src="tasks/image004.gif" alt=""></td>
        <td></td>
        <td></td>
        <td></td>
    </tr>
    <tr style="text-align:center;">
        <td>X&nbsp;,</td>
        <td>если</td>
        <td>N = 1</td>
    </tr>
    <tr style="text-align:center;">
        <td><em>(X&nbsp;<sup>N / 2</sup>)<sup>2</sup></em>&nbsp;,</td>
        <td>если</td>
        <td>N&nbsp;-&nbsp;четно</td>
    </tr>
    <tr>
        <td style="text-align:center;"><em>X(X&nbsp;<sup>(N&nbsp;-
            &nbsp;1)/2</sup>)<sup>2</sup></em>&nbsp;,
        </td>
        <td>если</td>
        <td>N&nbsp;-&nbsp;нечетно</td>
    </tr>
</table>
<br clear=ALL>

<p><strong><i>Уровень 1</i></strong>.
    Описать по шагам алгоритм &quot;быстрого&quot; возведения в степень.
    Продемонстрировать его работу при X=2, N=11.</p>

<p><strong><i>Уровень 2</i></strong>.
    Описать рекурсивную функцию &quot;быстрого&quot; возведения в
    степень.
    Написать
    программу, которая возводит заданное вещественное число в натуральную
    степень.</p>

<p><span>            Формат ввода:</span></p>

<p><span>Число </span><span>X</span></p>

<p><span>Число </span>N</p>

<p><span>            Формат вывода:</span></p>

<p><span>Значение полученной степени.</span></p>

<p><span>            <i>Пример</i>.</span></p>

<p><span>            Ввод:</span></p>

<p><span>2</span></p>

<p><span>4</span></p>

<p><span>            Вывод:</span></p>

<p><span>16</span></p>


<h3>Задача 2</h3>

<p><span>Последовательность чисел 0, 1, 1, 2,.3, 5, ..., где
каждое число, начиная с третьего, есть сумма двух предыдущих чисел
последовательности, называется последовательностью чисел Фибоначчи. 
При
заданном </span>N<span> требуется найти
первые </span>N<span> чисел
Фибоначчи.</span></p>

<p><strong><i>Уровень 1</i></strong><span>. Описать
алгоритм, который для заданного </span>N<span> получит число 
Фибоначчи 
с номером </span>N<span>.</span></p>

<p><span>Вычислить тринадцатое число Фибоначчи.</span></p>

<p><strong><i>Уровень 2</i></strong><span>. Описать
рекурсивную функцию, которая выдает значение </span>K<span>-ого 
числа
Фибоначчи.</span></p>

<p><span>Примечание: Обратить особое внимание на
недопустимость использования формулы </span><span>F</span><span
        style='font-size:
12.0pt;'>(</span>K<span>)&nbsp;=&nbsp;</span><span>F</span><span>
(</
    span>K<span>-1)+</span><span>F</span><span>(</span>K<span>-2),
поскольку,
в вызове </span><span>F</span><span>(</span>K<span>-1) содержится
вызов </span><span>F</span><span>(</span>K<span>-2) и т.д., что
порождает многочисленные повторные вычисления одного и того 
же.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Число </span>N</p>

<p><span>            Формат вывода:</span></p>

<p><span>Значение </span><span>N</span><span style='font-size:
12.0pt;'>-ого чила Фибоначчи.</span></p>

<p><span>            <i>Пример</i>.</span></p>

<p><span>            Ввод:</span></p>

<p><span>9</span></p>

<p><span>            Вывод:</span></p>

<p><span>21</span></p>

<h3>Задача 3</h3>

<p><span>На входном потоке находится
последовательность литер, которые могут быть только символами '0' или '1'.
Пробел - признак конца последовательности. Любая другая литера - 
ошибка. 
Нужно
найти десятичное число равное двоичному числу, заданному этой
последовательностью.</span></p>

<p><strong><i><span>Уровень 1</span></i></strong><span>. Построить по шагам
алгоритм перевода двоичного числа
в десятичное число. Найти десятичное представление для 
последовательностей:
100, 110001, 10000011.</span></p>

<p><strong><i><span>Уровень 2.</span></i></strong><span> По заданной
последовательности найти десятичное
число, описав соответствующую  </span><span style='font-
size:12.0pt'>рекурсивную
функцию.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Последовательность нулей и единиц</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Значение десятичного числа.</span></p>

<p><span>            <i>Пример</i>.</span></p>

<p><span>            Ввод:</span></p>

<p><span>10111</span></p>

<p><span>            Вывод:</span></p>

<p>23</p>


<h3>Задача 4</h3>

<p><strong><i>Уровень 2</i></strong><span>. На входном потоке находится
последовательность литер,
которые могут быть только цифрами. Пробел - признак конца 
последовательности.
Любая другая литера - ошибка. &quot;Собрать&quot; десятичное число из 
цифр этой
последовательности, описав рекурсивную функцию.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Последовательность литер, являющихся цифрами</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Значение полученного числа.</span></p>

<p><span>            <i>Пример</i>.</span></p>

<p><span>            Ввод:</span></p>

<p><span>4521</span></p>

<p><span>            Вывод:</span></p>

<p><span>4521</span></p>

<p><span>В примере 1 мы
подробно разобрали рекурсивный алгоритм создания рисунка из 
окружностей. 
Теперь
можно рассмотреть более сложные, но в то же время и более красивые 
рисунки,
например, &quot;веточки&quot; (рис.1 и рис.2) и &quot;снежинки&quot; 
(рис.3 
и
рис.4). </span></p>

<p class="image"><img src="tasks/img3.png" width="522" height="558"></p>

<p><span>При создании таких рисунков «из
реальной жизни» можно проявить настоящее творчество, например, 
нарисовать:</span></p>

<p style='margin-left:18.0pt'>- снежинки
    различные по форме или падающие по всему экрану;</p>

<p style='margin-left:18.0pt'>- веточки
    разного цвета, разной пушистости и разного размера (в длину ветки, угол
    наклона
    и цвет вносится случайная составляющая, рис.2);</p>

<p style='margin-left:18.0pt'>- а
    если на последнем уровне вложенности веточки рисовать желтые
    кружочки,
    то из
    голой зимней ветки можно получить пушистую весеннюю мимозу.</p>

<h3>Задача 5</h3>

<p><strong><i><span>Уровень 1.</span></i></strong><span> Описать по
шагам, как нарисовать веточку, изображенную на рисунке 1.</span></p>

<p><strong><i>Уровень 2</i></strong><span>. Написать
программу, печатающую веточку, изображенную на рисунке 
1.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Входных данных нет</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Рисунок веточки</span></p>


<h3>Задача 6</h3>

<p><strong><i><span>Уровень 1.</span></i></strong><span> Описать по
шагам, как нарисовать веточку, изображенную на рисунке 2.</span></p>

<p><strong><i>Уровень 2</i></strong><span>. Написать
программу, печатающую веточку, изображенную на рисунке 
2.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Входных данных нет</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Рисунок веточки</span></p>

<h3>Задача 7</h3>

<p><strong><i><span>Уровень 1.</span></i></strong><span> Описать по
шагам, как нарисовать снежинку, показанную на рис.3.</span></p>

<p><strong><i>Уровень 2</i></strong><span>. Написать
программу, печатающую снежинку, изображенную на рисунке 
3.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Входных данных нет</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Рисунок снежинки</span></p>

<h3>Задача 8</h3>

<p><strong><i><span>Уровень 1.</span></i></strong><span> Описать по
шагам, как нарисовать снежинку, показанную на рис.4.</span></p>

<p><strong><i>Уровень 2</i></strong><span>. Написать
программу, печатающую снежинку, изображенную на рисунке 
4.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Входных данных нет</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Рисунок снежинки</span></p>

<h3>Задача 9</h3>

<p>Для следующей задачи рассмотрим
    пример из области биологии. С помощью рекурсии можно построить модель
    Бенуа
    Мандельброта человеческого легкого, а именно, иерархию трахей и
    бронхов.
    Из
    рисунка 5 видно, что третья ветвь составляет по длине примерно половину
    первой
    ветви. Уменьшается также толщина ветвей-сосудов.</p>

<p class="image"><img src="tasks/img.png" width="522" height="259"></p>


<p><strong><i>Уровень 2</i></strong><span>. Написать программу, печатающую
модель легкого,
приведенную на рисунке 5.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Входных данных нет</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Графическое
изображение легкого</span></p>

<h3>Задача 10</h3>

<p><span>На рис.6 представлена
салфетка Серпинского. Как она образуется? Рисуется треугольник и в нем 
средние
линии. В образованных при углах исходного треугольника новых 
треугольниках
опять рисуются средние линии и т.д. до заданного порядка вложенности. 
Интересно,
что полученная фигура допускает другое (не рекурсивное) построение с 
помощью
моделирования методом Монте-Карло (но об этом в другой раз). А если 
вместо
треугольника взять прямоугольник, то получим скатерть Серпинского. 
</span></p>

<p><strong><i><span>Уровень 1</span></i></strong><span>. Нарисовать скатерть
Серпинского.</span></p>

<p><strong><i>Уровень 2</i></strong><span>. Написать
программу, печатающую салфетку Серпинского, приведенную на 
рис.6.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Входных данных нет</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Изображение
салфетки Серпинского</span></p>

<h3>Задача 11</h3>

<p class=31 style='margin-left:0'><strong><i><span>Уровень
2</span></i></strong><span>. Рассмотрим задачу о разрезании
прямоугольника с натуральными длинами сторон </span><span
        style='font-size:12.0pt'>a</span><span> и </span><span
        style='font-size:12.0pt'>b</span><span> на
квадраты максимальной площади (задача на использование алгоритма 
Евклида).
Предлагается не просто решить эту задачу, но и сделать наглядное 
графическое
сопровождение с помощью рекурсии (Рис.7). </span></p>

<div style="float:left;"><img src="tasks/img2.png" width="232"
                              height="171"></div>
<p><span>Параметрами
рекурсивной процедуры являются координаты вершин диагонали 
прямоугольника (</span><span
        style='font-size:12.0pt'>x</span><span>1,</span><span
        style='font-size:12.0pt'>y</span><span>1) и
(</span><span style='font-
size:12.0pt'>x</span><span>2,</span><span style='font-
size:12.0pt'>y</span><span>2). Как только стороны прямоугольника 
становятся
равными, то есть (</span><span style='font-
size:12.0pt'>x</span><span>2-</span><span style='font-
size:12.0pt'>x</span><span>1&nbsp;=&nbsp;</span><span
        style='font-size:12.0pt'>y</span><span>2-</span><span
        style='font-size:12.0pt'>y</span><span>1), осуществляется выход из
процедуры, если же нет, то
вычисляется длина меньшей стороны </span><span style='font-
size:
12.0pt'>k</span><span> (это и будет сторона квадрата),
и вдоль большей стороны отрезается (рисуется) квадрат. Затем происходит
обращение к рекурсивной процедуре с измененными параметрами, либо 
вместо </span><span
        style='font-size:12.0pt'>x</span><span>1
берется </span><span style='font-
size:12.0pt'>x</span><span>1+</span><span style='font-
size:12.0pt'>k</span><span> (если сторона по оси </span><span lang=EN-
                                                              US
                                                              style='font-size:12.0pt'>x</span><span> больше), либо
вместо </span><span style='font-
size:12.0pt'>y</span><span>1 
берется </span><span style='font-size:
12.0pt'>y</span><span>1+</span><span
        style='font-size:12.0pt'>k</span><span> (если сторона
по оси </span><span style='font-size:12.0pt'>y</span><span>
больше).</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Два целых числа через пробел</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Изображение
схемы деления</span></p>

<p><span>&nbsp;</span></p>

<p><span>            Далее
приводится несколько задач повышенной сложности для учащихся, 
умеющих
программировать.</span></p>

<h3>Задача 12</h3>

<p><span> На входном потоке
последовательность литер, заканчивающаяся пробелом. При помощи 
рекурсивной
логической функции определить является ли эта последовательность 
правильным
идентификатором. (Правильным идентификатором считается любая 
конечная
последовательность букв или цифр, начинающаяся с буквы).</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Последовательность букв и/или цифр</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>&quot; Последовательность является правильным
идентификатором &quot; или</span></p>

<p><span>&quot;Последовательность не является правильным
идентификатором&quot; </span></p>

<p><span>            <i>Пример</i>.</span></p>

<p><span>            Ввод:</span></p>

<p><span>Max</span><span>12</span></p>

<p><span>            Вывод:</span></p>

<p><span>Последовательность является правильным 
идентификатором</span></p>

<h3>Задача 13</h3>

<p><span>На входном потоке
последовательность литер, признаком конца которой является знак 
равенства. 
В
самой последовательности могут встречаться только цифры и знаки «+». 
При 
этом
вся последовательность представляет собой формулу сложения 
однозначных 
целых
чисел. Описать рекурсивную функцию, которая найдет значение этой 
формулы 
или
сообщит об ошибке.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Чередующаяся оследовательность цифр и знаков
&quot;+&quot;, заканчивающаяся &quot;=&quot;</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Значение  суммы</span></p>

<p><span>            <i>Пример</i>.</span></p>

<p><span>            Ввод:</span></p>

<p><span>1+3+6+2 =</span></p>

<p><span>            Вывод:</span></p>

<p><span>12</span></p>

<h3>Задача 14</h3>

<p><span>На входном потоке
последовательность литер, признаком конца которой является знак 
&quot;=&quot;.
В самой последовательности могут встречаться только цифры и знаки «+» 
или 
«-».
При этом вся последовательность представляет собой формулу 
арифметической суммы
однозначных целых чисел. Описать рекурсивную функцию, которая найдет 
значение
этой формулы или сообщит об ошибке.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Чередующаяся последовательность цифр и знаков
&quot;+&quot; и&quot;-&quot; </span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Значение суммы </span></p>

<p><span>            <i>Пример</i>.</span></p>

<p><span>            Ввод:</span></p>

<p><span>2+5-7+1+9=</span></p>

<p><span>            Вывод:</span></p>

<p>10</p>

<p>&nbsp;</p>

<h3>Задача 15</h3>

<p><span>На входном потоке
последовательность литер, признаком конца которой является пробел. В 
самой
последовательности могут встречаться только цифры и знаки «+» или «-». 
При 
этом
вся последовательность представляет собой формулу арифметической 
суммы
произвольных целых чисел. Описать рекурсивную процедуру или функцию, 
которая
найдет значение этой формулы или сообщит об ошибке.</span></p>

<p><span>            Формат ввода:</span></p>

<p><span>Последовательность цифр и знаков &quot;+&quot; или
&quot;-&quot;</span></p>

<p><span>            Формат вывода:</span></p>

<p><span>Значение суммы </span></p>

<p><span>            <i>Пример</i>.</span></p>

<p><span>            Ввод:</span></p>

<p><span>45+6-35+4-17=</span></p>

<p><span>            Вывод:</span></p>

<p><span>3</span></p>

<p><i><span>Программа 
</span></i><i><span>Hanoi</span></i><i><span>.</span></i><i><span>e
xe</span></i><i><span> содержит
  демонстрационную версию решения задачи &quot;Ханойские 
башни&quot;.</span></i></p>

<p><strong><span>Литература</span></strong></p>

<p><strong><span>1.<span
        style='font:7.0pt ""'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></strong><strong><span>Павлова М.В.</span></strong><span>,
<strong>Паньгина Н.Н. Примеры и задачи на тему «Рекурсия». – «Компьютерные инструменты в образовании»,
    2001</strong></span></p>

<p>&nbsp;</p>

</div>
</body>

</html>
